# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_z6rAg7z6dxKCYIn8rH7SdV3z4t1zxqy
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Load the dataset
df = pd.read_csv("/content/sample_data/Weather Data.csv")

# Select feature (Relative Humidity) and target variable (Temperature)
X = df[['Rel Hum_%']]  # Independent variable
y = df['Temp_C']  # Dependent variable

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate R² score
r2 = r2_score(y_test, y_pred)
print(f"R² Score: {r2:.4f}")

# Plot Actual vs. Predicted with a 45° Line
plt.figure(figsize=(6,6))
plt.scatter(y_test, y_pred, alpha=0.5, label="Predictions", color="blue")
plt.plot(y_test, y_test, color='red', linestyle='--', label="45° Line (Ideal)")  # y = x line
plt.xlabel("Actual Temperature (°C)")
plt.ylabel("Predicted Temperature (°C)")
plt.title("Actual vs. Predicted Temperature with 45° Line")
plt.legend()
plt.grid(True)
plt.show()